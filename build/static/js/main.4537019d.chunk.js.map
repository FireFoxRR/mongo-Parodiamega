{"version":3,"sources":["components/header.component.js","components/home.component.js","services/LoginService.js","components/login.component.js","firebase.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorials-list.component.js","services/UsersService.js","components/register-component.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","to","Home","Component","withRouter","axios","get","loginData","console","log","post","Login","props","login","e","preventDefault","sessionStorage","removeItem","name","state","username","password","JSON","stringify","setItem","id","LoginService","signin","then","res","data","token","window","location","setup","getSetup","changepasswordHandler","event","setState","target","value","changeUsernameHandler","bind","this","history","push","getTitle","placeholder","onChange","onClick","fire","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","db","collection","tutorial","add","doc","update","delete","onChangeTitle","onChangeDescription","saveTutorial","newTutorial","handleChange","handleUpload","title","description","published","submitted","file","fileurl","TutorialDataService","create","catch","alert","files","myname","ref","put","on","error","child","getDownloadURL","url","htmlFor","type","required","onSubmit","src","alt","Tutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","prevState","status","refreshList","nextProps","setActiveTutorial","onDataChange","tutorials","currentIndex","unsubscribe","undefined","getAll","orderBy","onSnapshot","items","forEach","item","index","map","user","USER_API_BASE_URL","Register","saveUser","usuario","pass","contrasena","pass_confirm","confirmacion","UsersService","createUsers","changeUsuarioHandler","changeContrasenaHandler","changeConfirmacionHandler","App","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4537019d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Header() {\n    return (\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/tutorials\" className=\"navbar-brand\">\n            Parodia-Mega\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/tutorials\"} className=\"nav-link\">\n                Mis archivos\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Subir archivos\n              </Link>\n            </li>\n          </div>\n        </nav>\n    );\n\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { withRouter } from \"react-router\";\n\nimport Header from \"./header.component\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <Header/>\n\n        <div className=\"container mt-3\">\n          <h2>Bienvenido a Mega-Parodia :D</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","import axios from 'axios';\n\nconst LOGIN_API_BASE_URL = \"https://mega-parodia.herokuapp.com/api/login\";\n\nclass LoginService {\n\n    getSetup(){\n        return axios.get('https://mega-parodia.herokuapp.com/setup');\n    }\n    \n    signin(loginData){\n        console.log(loginData);\n\n        return axios.post(LOGIN_API_BASE_URL,\n            loginData);\n    }\n}\n\nexport default new LoginService()\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport LoginService from '../services/LoginService';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            // step 2\n            id: '',\n            password: '',\n            username: ''\n        }\n        this.changepasswordHandler = this.changepasswordHandler.bind(this);\n        this.login = this.login.bind(this);\n    }\n\n    // step 3\n    componentDidMount(){\n\n        // step 4\n        /*\n        if(this.state.id === '_add'){\n            return\n        }else{\n            LoginService.getEmployeeById(this.state.id).then( (res) =>{\n                let employee = res.data;\n                this.setState({password: employee.password,\n                    lastName: employee.lastName,\n                    username : employee.username\n                });\n            });\n        } */       \n    }\n    login = (e) => {\n        e.preventDefault();\n        sessionStorage.removeItem('author');\n        let loginData = {name: this.state.username, password: this.state.password};\n        console.log('login data => ' + JSON.stringify(loginData));\n        sessionStorage.setItem('author', this.state.username);\n        // step 5\n        if(this.state.id === ''){\n            LoginService.signin(loginData).then(res =>{\n                console.log(res.data);\n\n                //localStorage.setItem('token', res.data.accessToken);\n                sessionStorage.setItem('token', res.data.token);\n                sessionStorage.setItem('tokenVal', true);\n                if (res.data.token){\n                  window.location.href = \"/home\";\n\n                }\n                \n                //console.log(res.data.accessToken);\n                \n                //this.props.history.push('/employees');\n            });\n        }else{\n           /* EmployeeService.updateEmployee(loginData, this.state.id).then( res => {\n                this.props.history.push('/employees');\n            }); */\n        }\n    }\n\n    setup = (e) => {\n        e.preventDefault();\n        sessionStorage.removeItem('author');\n        sessionStorage.setItem('author', \"anonimo\");\n        // step 5\n        if(this.state.id === ''){\n            LoginService.getSetup().then(res =>{\n                console.log(res.data);\n\n                //localStorage.setItem('token', res.data.accessToken);\n                sessionStorage.setItem('token', res.data.token);\n                sessionStorage.setItem('tokenVal', true);\n                window.location.href = \"/comments\";\n                \n                //console.log(res.data.accessToken);\n                \n                //this.props.history.push('/employees');\n            });\n        }else{\n           /* EmployeeService.updateEmployee(loginData, this.state.id).then( res => {\n                this.props.history.push('/employees');\n            }); */\n        }\n    }    \n    \n    changepasswordHandler= (event) => {\n        this.setState({password: event.target.value});\n    }\n/*\n    changeLastNameHandler= (event) => {\n        this.setState({lastName: event.target.value});\n    }\n*/\n    changeUsernameHandler= (event) => {\n        this.setState({username: event.target.value});\n    }\n\n    cancel(){\n        this.props.history.push('/employees');\n    }\n\n    getTitle(){\n        if(this.state.id === ''){\n            return <h3 className=\"text-center\">Login</h3>\n        }else{\n            return <h3 className=\"text-center\">Login Employee</h3>\n        }\n    }\n    render() {\n        return (\n            <div>\n                <br></br>\n                   <div className = \"container\">\n                        <div className = \"row\">\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                                {\n                                    this.getTitle()\n                                }\n                                <div className = \"card-body\">\n                                    <form>\n                                        \n                                        <div className = \"form-group\">\n                                            <label> Username: </label>\n                                            <input placeholder=\"Username\" name=\"username\" className=\"form-control\" \n                                                value={this.state.username} onChange={this.changeUsernameHandler}/>\n                                        </div>\n\n                                        <div className = \"form-group\">\n                                            <label> Password : </label>\n                                            <input placeholder=\"Password \" name=\"password\" className=\"form-control\" \n                                                value={this.state.password} onChange={this.changepasswordHandler}/>\n                                        </div>\n                                        \n                                        \n                                        <button className=\"btn btn-success\" onClick={this.login}> Login </button>\n                                        <button className=\"btn btn-success\"><Link to=\"/register\">Registrarse</Link></button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n\n                   </div>\n            </div>\n        )\n    }\n}\n\nexport default Login\n","//import firebase from 'firebase/app'\nimport 'firebase/storage'\nimport * as fire from \"firebase\";\nimport \"firebase/firestore\";\n // Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAKWdDmbPqKqJTZ5wmqtn5OZ22LoCtLTbM\",\n    authDomain: \"mega-parodia.firebaseapp.com\",\n    projectId: \"mega-parodia\",\n    storageBucket: \"mega-parodia.appspot.com\",\n    messagingSenderId: \"483920467168\",\n    appId: \"1:483920467168:web:e56750459a4cc53e826c85\",\n    measurementId: \"G-D6TZD11X7R\"\n};\n\n// Initialize Firebase\nfire.initializeApp(firebaseConfig);\nconst storage = fire.storage()\n\n//export default firebase.firestore();\nvar firebase1 = fire.firestore();\n\nexport  {\n    storage, firebase1 as default\n}\n\n\n/*\nimport * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nconst config = {\n    apiKey: \"AIzaSyC32lkjiyr7WcjmRU2HOdZ1G18wzSMiGD0\",\n    authDomain: \"mi-mandadero.firebaseapp.com\",\n    databaseURL: \"https://mi-mandadero-default-rtdb.firebaseio.com\",\n    projectId: \"mi-mandadero\",\n    storageBucket: \"mi-mandadero.appspot.com\",\n    messagingSenderId: \"1055645118874\",\n    appId: \"1:1055645118874:web:fa2b0093b05e6c8ada0a23\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(config);\nconst storage = firebase.storage()\n\nexport  {\n    storage, firebase as default\n}\n*/\n//export default firebase.firestore();","import firebase from \"../firebase\";\n\nconst db = firebase.collection(\"/tutorials\");\n\nclass TutorialDataService {\n  getAll() {\n    return db;\n  }\n\n  create(tutorial) {\n    return db.add(tutorial);\n  }\n\n  update(id, value) {\n    return db.doc(id).update(value);\n  }\n\n  delete(id) {\n    return db.doc(id).delete();\n  }\n}\n\nexport default new TutorialDataService();","import React, { Component } from \"react\";\n//import {useState} from 'react'\nimport { storage } from \"../firebase\";\nimport Header from \"./header.component\";\n\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { withRouter, Redirect } from \"react-router\";\n\n  \nexport default withRouter (class AddTutorial extends Component {\n\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false,\n      file: \"\",\n      name: \"\",\n      fileurl: \"\"\n\n    };\n    \n  }\n\n  /* storage */\n  \n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  saveTutorial() {\n    let data = {\n      title: this.state.title,\n      description: this.state.description,\n      published: false,\n      fileurl: this.state.fileurl\n    };\n\n    TutorialDataService.create(data)\n      .then(() => {\n        console.log(\"Created new item successfully!\");\n        this.setState({\n          submitted: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false,\n    });\n  }\n\n  handleChange(e) {\n    alert(\"e: \" + e.target.files[0]);\n    alert(\"e: \" + e.target.files[0].name);\n\n    this.setState({\n        file: e.target.files[0],\n        name: e.target.files[0].name\n      });\n  }\n\n  handleUpload(e) {\n    let myname = this.state.name;\n    alert(\"uploading...\" + myname);\n    e.preventDefault();\n    const uploadTask = storage.ref(`/images/${this.state.name}`).put(this.state.file);\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\n      storage\n        .ref(\"images\")\n        .child(this.state.name)\n        .getDownloadURL()\n        .then((url) => {\n          //this.setFile(null);\n          this.setState({fileurl: url});\n        });\n    });\n  }\n\n  \n  render() {\n//    function App() {\n\n    //const allInputs = {imgUrl: ''}\n    //const [imageAsFile, setImageAsFile] = useState('')\n    //const [imageAsUrl, setImageAsUrl] = useState(allInputs)\n \n  \n   \n\n\n   // }\n    return (\n      <div className=\"submit-form\">\n            <Header/>\n\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div> \n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n          \n        )}\n     \n     <div className=\"App\">\n\n      <form onSubmit={this.handleUpload}>\n        <input type=\"file\" onChange={this.handleChange} />\n        <button >upload to firebase</button>\n      </form>\n      {this.state.fileurl}\n      <img src={this.state.fileurl} alt=\"\" />\n    </div>\n     \n      </div>\n    );\n  }\n})\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateTutorial = this.updateTutorial.bind(this);\n    this.deleteTutorial = this.deleteTutorial.bind(this);\n\n    this.state = {\n      currentTutorial: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false,\n        fileurl: \"\"\n      },\n      message: \"\",\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { tutorial } = nextProps;\n    if (prevState.currentTutorial.id !== tutorial.id) {\n      return {\n        currentTutorial: tutorial,\n        message: \"\"\n      };\n    }\n\n    return prevState.currentTutorial;\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentTutorial: this.props.tutorial,\n    });\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          title: title,\n        },\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n\n    this.setState((prevState) => ({\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        description: description,\n      },\n    }));\n  }\n\n  updatePublished(status) {\n    TutorialDataService.update(this.state.currentTutorial.id, {\n      published: status,\n    })\n      .then(() => {\n        this.setState((prevState) => ({\n          currentTutorial: {\n            ...prevState.currentTutorial,\n            published: status,\n          },\n          message: \"The status was updated successfully!\",\n        }));\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  updateTutorial() {\n    const data = {\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n    };\n\n    TutorialDataService.update(this.state.currentTutorial.id, data)\n      .then(() => {\n        this.setState({\n          message: \"The tutorial was updated successfully!\",\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  deleteTutorial() {\n    TutorialDataService.delete(this.state.currentTutorial.id)\n      .then(() => {\n        this.props.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentTutorial } = this.state;\n\n    return (\n      <div>\n        <h4>Tutorial</h4>\n        {currentTutorial ? (\n          <div className=\"edit-form\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.title}\n                  onChange={this.onChangeTitle}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  value={currentTutorial.description}\n                  onChange={this.onChangeDescription}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Foto:</label>\n                {currentTutorial.fileurl}\n                <a href={currentTutorial.fileurl}> descargar </a>\n              </div>\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\n              </div>\n            </form>\n\n            {currentTutorial.published ? (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Publish\n              </button>\n            )}\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteTutorial}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateTutorial}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Dale click en archivos para ver </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { withRouter } from \"react-router\";\nimport Header from \"./header.component\";\n\nimport Tutorial from \"./tutorial.component\";\n\nexport default withRouter (class TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n    };\n\n    this.unsubscribe = undefined;\n  }\n\n  componentDidMount() {\n    this.unsubscribe = TutorialDataService.getAll().orderBy(\"title\", \"asc\").onSnapshot(this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  onDataChange(items) {\n    let tutorials = [];\n\n    items.forEach((item) => {\n      let id = item.id;\n      let data = item.data();\n      tutorials.push({\n        id: id,\n        title: data.title,\n        description: data.description,\n        published: data.published,\n        fileurl: data.fileurl\n      });\n    });\n\n    this.setState({\n      tutorials: tutorials,\n    });\n  }\n\n  refreshList() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  render() {\n    const { tutorials, currentTutorial, currentIndex } = this.state;\n\n    return (\n      <div>\n                  <Header/>\n\n      <div className=\"list row\">\n\n        <div className=\"col-md-6\">\n          <h4>Archivos</h4>\n\n          <ul className=\"list-group\">\n            {tutorials &&\n              tutorials.map((tutorial, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\n                  key={index}\n                >\n                  {tutorial.title}\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div className=\"col-md-6\">\n          {currentTutorial ? (\n            <Tutorial\n              tutorial={currentTutorial}\n              refreshList={this.refreshList}\n            />\n          ) : (\n            <div>\n              <br />\n              <p>Dale click en archivos para ver </p>\n            </div>\n          )}\n        </div>\n      </div>\n      </div>\n    );\n  }\n})\n","import axios from 'axios';\n\nconst USER_API_BASE_URL = \"https://mega-parodia.herokuapp.com/\";\n\nclass UsersService {\n\n    createUsers(user){\n        return axios.post(USER_API_BASE_URL + 'api/signup', user);\n    }\n}\n\nexport default new UsersService()\n","import React, { Component } from 'react'\nimport UsersService from '../services/UsersService';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            // step 2\n            id: '',\n            usuario: '',\n            contrasena: '',\n            confirmacion: ''\n        }\n        this.changeUsuarioHandler = this.changeUsuarioHandler.bind(this);\n        this.changeContrasenaHandler = this.changeContrasenaHandler.bind(this);\n        this.saveUser = this.saveUser.bind(this);\n    }\n\n    // step 3\n    componentDidMount(){\n\n        // step 4\n        /*\n        if(this.state.id === '_add'){\n            return\n        }else{\n            UsersService.getEmployeeById(this.state.id).then( (res) =>{\n                let employee = res.data;\n                this.setState({firstName: employee.firstName,\n                    lastName: employee.lastName,\n                    emailId : employee.emailId\n                });\n            });\n        }     \n        */   \n    }\n\n    saveUser = (e) => {\n        e.preventDefault();\n        let user = {name: this.state.usuario, pass: this.state.contrasena, pass_confirm: this.state.confirmacion};\n        console.log('user => ' + JSON.stringify(user));\n\n        // step 5\n        if(this.state.id === ''){\n            UsersService.createUsers(user).then(res =>{\n                window.location.href = \"/tutorials\";\n                //this.props.history.push('/employees');\n            });\n        }else{\n            /*UsersService.updateEmployee(employee, this.state.id).then( res => {\n                this.props.history.push('/employees');\n            });*/\n        }\n    }\n    \n    changeUsuarioHandler= (event) => {\n        this.setState({usuario: event.target.value});\n    }\n\n    changeContrasenaHandler= (event) => {\n        this.setState({contrasena: event.target.value});\n    }\n\n    changeConfirmacionHandler= (event) => {\n        this.setState({confirmacion: event.target.value});\n    }\n\n    cancel(){\n        //this.props.history.push('/employees');\n    }\n\n    getTitle(){\n        if(this.state.id === ''){\n            return <h3 className=\"text-center\">Registrar usuario</h3>\n        }else{\n            return <h3 className=\"text-center\">Update Employee</h3>\n        }\n    }\n    render() {\n        return (\n            <div>\n                <br></br>\n                   <div className = \"container\">\n                        <div className = \"row\">\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                                {\n                                    this.getTitle()\n                                }\n                                <div className = \"card-body\">\n                                    <form>\n                                        <div className = \"form-group\">\n                                            <label> Username: </label>\n                                            <input placeholder=\"Username\" name=\"usuario\" className=\"form-control\" \n                                                value={this.state.usuario} onChange={this.changeUsuarioHandler}/>\n                                        </div>\n                                        <div className = \"form-group\">\n                                            <label> Contrasena: </label>\n                                            <input placeholder=\"Contrasena\" name=\"contrasena\" className=\"form-control\" \n                                                value={this.state.contrasena} onChange={this.changeContrasenaHandler}/>\n                                        </div>\n                                        <div className = \"form-group\">\n                                            <label> Repetir contrasena: </label>\n                                            <input placeholder=\"Repetir contrasena\" name=\"confirmacion\" className=\"form-control\" \n                                                value={this.state.confirmacion} onChange={this.changeConfirmacionHandler}/>\n                                        </div>\n\n                                        <button className=\"btn btn-success\" onClick={this.saveUser}>Save</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n\n                   </div>\n            </div>\n        )\n    }\n}\n\nexport default Register\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from './components/home.component'\nimport Login from './components/login.component'\nimport AddTutorial from './components/add-tutorial.component'\nimport TutorialsList from './components/tutorials-list.component'\nimport Register from './components/register-component'\n\nconst App = () => (\n        <Router>\n            <Switch>\n                <Route exact path=\"/home\">\n                    <Home />\n                </Route>\n                <Route exact path=\"/\">\n                    <Login />\n                </Route>\n                <Route exact path=\"/tutorials\">\n                    <TutorialsList />\n                </Route>\n                <Route exact path=\"/add\">\n                    <AddTutorial />\n                </Route>\n                <Route exact path=\"/register\">\n                    <Register />\n                </Route>\n            </Switch>\n        </Router>\n);\n\nexport default App;\n","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}